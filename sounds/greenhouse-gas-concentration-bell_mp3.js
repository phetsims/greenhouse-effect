/* eslint-disable */
import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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0fgVnOjzXYVqIX4uDUNqaVWmXBagsKJ9St9P22/9f/6qIxh2VjY9dRQoKYQMo1tHp14qu3pRXfUdX6f8mOU2ln///ZkAABW7VEwQRATKCnzy//swxEIABVxpR6gFpTCihyZ08KikpFd98dBm71q/0//1M2It/9HoLcjjkjARQEDBKkWCj1jCqLHLAT3f/9306zpZElQzlv/7PGVMQU1FMy45OS41VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//syxFuABHArN+C8QCB6AWW0EwQEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/7MsR+g8RUASWghGAwAAA0gAAABFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVU=';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();
const onDecodeSuccess = decodedAudio => {
  wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
  unlock();
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 0, phetAudioContext.sampleRate ) );
  unlock();
};
phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
export default wrappedAudioBuffer;