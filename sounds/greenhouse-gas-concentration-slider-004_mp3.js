/* eslint-disable */
import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();
const onDecodeSuccess = decodedAudio => {
  wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
  unlock();
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 0, phetAudioContext.sampleRate ) );
  unlock();
};
phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
export default wrappedAudioBuffer;