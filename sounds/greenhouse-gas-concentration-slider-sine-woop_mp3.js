/* eslint-disable */
import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();
const onDecodeSuccess = decodedAudio => {
  wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
  unlock();
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 0, phetAudioContext.sampleRate ) );
  unlock();
};
phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
export default wrappedAudioBuffer;